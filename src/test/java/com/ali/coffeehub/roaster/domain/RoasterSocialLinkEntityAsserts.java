package com.ali.coffeehub.roaster.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RoasterSocialLinkEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterSocialLinkEntityAllPropertiesEquals(RoasterSocialLinkEntity expected, RoasterSocialLinkEntity actual) {
        assertRoasterSocialLinkEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertRoasterSocialLinkEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterSocialLinkEntityAllUpdatablePropertiesEquals(
        RoasterSocialLinkEntity expected,
        RoasterSocialLinkEntity actual
    ) {
        assertRoasterSocialLinkEntityUpdatableFieldsEquals(expected, actual);
        assertRoasterSocialLinkEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterSocialLinkEntityAutoGeneratedPropertiesEquals(
        RoasterSocialLinkEntity expected,
        RoasterSocialLinkEntity actual
    ) {
        assertThat(expected)
            .as("Verify RoasterSocialLinkEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterSocialLinkEntityUpdatableFieldsEquals(
        RoasterSocialLinkEntity expected,
        RoasterSocialLinkEntity actual
    ) {
        assertThat(expected)
            .as("Verify RoasterSocialLinkEntity relevant properties")
            .satisfies(e -> assertThat(e.getRoasterId()).as("check roasterId").isEqualTo(actual.getRoasterId()))
            .satisfies(e -> assertThat(e.getPlatform()).as("check platform").isEqualTo(actual.getPlatform()))
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getDeleted()).as("check deleted").isEqualTo(actual.getDeleted()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterSocialLinkEntityUpdatableRelationshipsEquals(
        RoasterSocialLinkEntity expected,
        RoasterSocialLinkEntity actual
    ) {
        // empty method
    }
}
