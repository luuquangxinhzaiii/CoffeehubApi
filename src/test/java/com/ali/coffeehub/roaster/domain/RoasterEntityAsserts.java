package com.ali.coffeehub.roaster.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RoasterEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterEntityAllPropertiesEquals(RoasterEntity expected, RoasterEntity actual) {
        assertRoasterEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertRoasterEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterEntityAllUpdatablePropertiesEquals(RoasterEntity expected, RoasterEntity actual) {
        assertRoasterEntityUpdatableFieldsEquals(expected, actual);
        assertRoasterEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterEntityAutoGeneratedPropertiesEquals(RoasterEntity expected, RoasterEntity actual) {
        assertThat(expected)
            .as("Verify RoasterEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterEntityUpdatableFieldsEquals(RoasterEntity expected, RoasterEntity actual) {
        assertThat(expected)
            .as("Verify RoasterEntity relevant properties")
            .satisfies(e -> assertThat(e.getCategoryId()).as("check categoryId").isEqualTo(actual.getCategoryId()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getDeleted()).as("check deleted").isEqualTo(actual.getDeleted()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoasterEntityUpdatableRelationshipsEquals(RoasterEntity expected, RoasterEntity actual) {
        // empty method
    }
}
