package com.ali.coffeehub.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EntityTagsEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityTagsEntityAllPropertiesEquals(EntityTagsEntity expected, EntityTagsEntity actual) {
        assertEntityTagsEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertEntityTagsEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityTagsEntityAllUpdatablePropertiesEquals(EntityTagsEntity expected, EntityTagsEntity actual) {
        assertEntityTagsEntityUpdatableFieldsEquals(expected, actual);
        assertEntityTagsEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityTagsEntityAutoGeneratedPropertiesEquals(EntityTagsEntity expected, EntityTagsEntity actual) {
        assertThat(expected)
            .as("Verify EntityTagsEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityTagsEntityUpdatableFieldsEquals(EntityTagsEntity expected, EntityTagsEntity actual) {
        assertThat(expected)
            .as("Verify EntityTagsEntity relevant properties")
            .satisfies(e -> assertThat(e.getTagId()).as("check tagId").isEqualTo(actual.getTagId()))
            .satisfies(e -> assertThat(e.getEntityType()).as("check entityType").isEqualTo(actual.getEntityType()))
            .satisfies(e -> assertThat(e.getEntityId()).as("check entityId").isEqualTo(actual.getEntityId()))
            .satisfies(e -> assertThat(e.getDeleted()).as("check deleted").isEqualTo(actual.getDeleted()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityTagsEntityUpdatableRelationshipsEquals(EntityTagsEntity expected, EntityTagsEntity actual) {
        // empty method
    }
}
