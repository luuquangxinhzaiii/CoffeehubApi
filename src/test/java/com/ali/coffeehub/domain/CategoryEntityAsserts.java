package com.ali.coffeehub.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CategoryEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryEntityAllPropertiesEquals(CategoryEntity expected, CategoryEntity actual) {
        assertCategoryEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertCategoryEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryEntityAllUpdatablePropertiesEquals(CategoryEntity expected, CategoryEntity actual) {
        assertCategoryEntityUpdatableFieldsEquals(expected, actual);
        assertCategoryEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryEntityAutoGeneratedPropertiesEquals(CategoryEntity expected, CategoryEntity actual) {
        assertThat(expected)
            .as("Verify CategoryEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryEntityUpdatableFieldsEquals(CategoryEntity expected, CategoryEntity actual) {
        assertThat(expected)
            .as("Verify CategoryEntity relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDesciption()).as("check desciption").isEqualTo(actual.getDesciption()))
            .satisfies(e -> assertThat(e.getIconUri()).as("check iconUri").isEqualTo(actual.getIconUri()))
            .satisfies(e -> assertThat(e.getDeleted()).as("check deleted").isEqualTo(actual.getDeleted()))
            .satisfies(e -> assertThat(e.getModuleName()).as("check moduleName").isEqualTo(actual.getModuleName()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryEntityUpdatableRelationshipsEquals(CategoryEntity expected, CategoryEntity actual) {
        // empty method
    }
}
