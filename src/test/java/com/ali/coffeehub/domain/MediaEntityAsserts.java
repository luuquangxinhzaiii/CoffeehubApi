package com.ali.coffeehub.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MediaEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaEntityAllPropertiesEquals(MediaEntity expected, MediaEntity actual) {
        assertMediaEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertMediaEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaEntityAllUpdatablePropertiesEquals(MediaEntity expected, MediaEntity actual) {
        assertMediaEntityUpdatableFieldsEquals(expected, actual);
        assertMediaEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaEntityAutoGeneratedPropertiesEquals(MediaEntity expected, MediaEntity actual) {
        assertThat(expected)
            .as("Verify MediaEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaEntityUpdatableFieldsEquals(MediaEntity expected, MediaEntity actual) {
        assertThat(expected)
            .as("Verify MediaEntity relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getEntityType()).as("check entityType").isEqualTo(actual.getEntityType()))
            .satisfies(e -> assertThat(e.getEntityId()).as("check entityId").isEqualTo(actual.getEntityId()))
            .satisfies(e -> assertThat(e.getFileName()).as("check fileName").isEqualTo(actual.getFileName()))
            .satisfies(e -> assertThat(e.getFileType()).as("check fileType").isEqualTo(actual.getFileType()))
            .satisfies(e -> assertThat(e.getMimeType()).as("check mimeType").isEqualTo(actual.getMimeType()))
            .satisfies(e -> assertThat(e.getFileSize()).as("check fileSize").isEqualTo(actual.getFileSize()))
            .satisfies(e -> assertThat(e.getFileUri()).as("check fileUri").isEqualTo(actual.getFileUri()))
            .satisfies(e -> assertThat(e.getThumbnailUri()).as("check thumbnailUri").isEqualTo(actual.getThumbnailUri()))
            .satisfies(e -> assertThat(e.getWidth()).as("check width").isEqualTo(actual.getWidth()))
            .satisfies(e -> assertThat(e.getHeight()).as("check height").isEqualTo(actual.getHeight()))
            .satisfies(e -> assertThat(e.getDuration()).as("check duration").isEqualTo(actual.getDuration()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaEntityUpdatableRelationshipsEquals(MediaEntity expected, MediaEntity actual) {
        // empty method
    }
}
