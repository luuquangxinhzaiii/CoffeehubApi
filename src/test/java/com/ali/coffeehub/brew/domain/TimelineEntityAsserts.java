package com.ali.coffeehub.brew.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TimelineEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimelineEntityAllPropertiesEquals(TimelineEntity expected, TimelineEntity actual) {
        assertTimelineEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertTimelineEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimelineEntityAllUpdatablePropertiesEquals(TimelineEntity expected, TimelineEntity actual) {
        assertTimelineEntityUpdatableFieldsEquals(expected, actual);
        assertTimelineEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimelineEntityAutoGeneratedPropertiesEquals(TimelineEntity expected, TimelineEntity actual) {
        assertThat(expected)
            .as("Verify TimelineEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimelineEntityUpdatableFieldsEquals(TimelineEntity expected, TimelineEntity actual) {
        assertThat(expected)
            .as("Verify TimelineEntity relevant properties")
            .satisfies(e -> assertThat(e.getConfigId()).as("check configId").isEqualTo(actual.getConfigId()))
            .satisfies(e -> assertThat(e.getConfigValueId()).as("check configValueId").isEqualTo(actual.getConfigValueId()))
            .satisfies(e -> assertThat(e.getRecipeId()).as("check recipeId").isEqualTo(actual.getRecipeId()))
            .satisfies(e -> assertThat(e.getStartTime()).as("check startTime").isEqualTo(actual.getStartTime()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getRatio()).as("check ratio").isEqualTo(actual.getRatio()))
            .satisfies(e -> assertThat(e.getIsFixed()).as("check isFixed").isEqualTo(actual.getIsFixed()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimelineEntityUpdatableRelationshipsEquals(TimelineEntity expected, TimelineEntity actual) {
        // empty method
    }
}
