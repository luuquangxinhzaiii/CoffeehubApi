package com.ali.coffeehub.cafeteria.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CoffeeShopReactionEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopReactionEntityAllPropertiesEquals(
        CoffeeShopReactionEntity expected,
        CoffeeShopReactionEntity actual
    ) {
        assertCoffeeShopReactionEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertCoffeeShopReactionEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopReactionEntityAllUpdatablePropertiesEquals(
        CoffeeShopReactionEntity expected,
        CoffeeShopReactionEntity actual
    ) {
        assertCoffeeShopReactionEntityUpdatableFieldsEquals(expected, actual);
        assertCoffeeShopReactionEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopReactionEntityAutoGeneratedPropertiesEquals(
        CoffeeShopReactionEntity expected,
        CoffeeShopReactionEntity actual
    ) {
        assertThat(expected)
            .as("Verify CoffeeShopReactionEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopReactionEntityUpdatableFieldsEquals(
        CoffeeShopReactionEntity expected,
        CoffeeShopReactionEntity actual
    ) {
        assertThat(expected)
            .as("Verify CoffeeShopReactionEntity relevant properties")
            .satisfies(e -> assertThat(e.getCoffeeShopId()).as("check coffeeShopId").isEqualTo(actual.getCoffeeShopId()))
            .satisfies(e -> assertThat(e.getUserId()).as("check userId").isEqualTo(actual.getUserId()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopReactionEntityUpdatableRelationshipsEquals(
        CoffeeShopReactionEntity expected,
        CoffeeShopReactionEntity actual
    ) {
        // empty method
    }
}
