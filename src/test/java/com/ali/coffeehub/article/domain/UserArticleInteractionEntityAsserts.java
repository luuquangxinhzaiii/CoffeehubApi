package com.ali.coffeehub.article.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserArticleInteractionEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserArticleInteractionEntityAllPropertiesEquals(
        UserArticleInteractionEntity expected,
        UserArticleInteractionEntity actual
    ) {
        assertUserArticleInteractionEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertUserArticleInteractionEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserArticleInteractionEntityAllUpdatablePropertiesEquals(
        UserArticleInteractionEntity expected,
        UserArticleInteractionEntity actual
    ) {
        assertUserArticleInteractionEntityUpdatableFieldsEquals(expected, actual);
        assertUserArticleInteractionEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserArticleInteractionEntityAutoGeneratedPropertiesEquals(
        UserArticleInteractionEntity expected,
        UserArticleInteractionEntity actual
    ) {
        assertThat(expected)
            .as("Verify UserArticleInteractionEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserArticleInteractionEntityUpdatableFieldsEquals(
        UserArticleInteractionEntity expected,
        UserArticleInteractionEntity actual
    ) {
        assertThat(expected)
            .as("Verify UserArticleInteractionEntity relevant properties")
            .satisfies(e -> assertThat(e.getAticleId()).as("check aticleId").isEqualTo(actual.getAticleId()))
            .satisfies(e -> assertThat(e.getUserId()).as("check userId").isEqualTo(actual.getUserId()))
            .satisfies(e -> assertThat(e.getReadProgress()).as("check readProgress").isEqualTo(actual.getReadProgress()))
            .satisfies(e -> assertThat(e.getIsBookmarked()).as("check isBookmarked").isEqualTo(actual.getIsBookmarked()))
            .satisfies(e -> assertThat(e.getLastReadAt()).as("check lastReadAt").isEqualTo(actual.getLastReadAt()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserArticleInteractionEntityUpdatableRelationshipsEquals(
        UserArticleInteractionEntity expected,
        UserArticleInteractionEntity actual
    ) {
        // empty method
    }
}
