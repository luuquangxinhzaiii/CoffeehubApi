package com.ali.coffeehub.brew.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RecipeDetailEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeDetailEntityAllPropertiesEquals(RecipeDetailEntity expected, RecipeDetailEntity actual) {
        assertRecipeDetailEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertRecipeDetailEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeDetailEntityAllUpdatablePropertiesEquals(RecipeDetailEntity expected, RecipeDetailEntity actual) {
        assertRecipeDetailEntityUpdatableFieldsEquals(expected, actual);
        assertRecipeDetailEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeDetailEntityAutoGeneratedPropertiesEquals(RecipeDetailEntity expected, RecipeDetailEntity actual) {
        assertThat(expected)
            .as("Verify RecipeDetailEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeDetailEntityUpdatableFieldsEquals(RecipeDetailEntity expected, RecipeDetailEntity actual) {
        assertThat(expected)
            .as("Verify RecipeDetailEntity relevant properties")
            .satisfies(e -> assertThat(e.getRecipeId()).as("check recipeId").isEqualTo(actual.getRecipeId()))
            .satisfies(e -> assertThat(e.getDetail()).as("check detail").isEqualTo(actual.getDetail()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeDetailEntityUpdatableRelationshipsEquals(RecipeDetailEntity expected, RecipeDetailEntity actual) {
        // empty method
    }
}
