package com.ali.coffeehub.cafeteria.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CoffeeShopEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopEntityAllPropertiesEquals(CoffeeShopEntity expected, CoffeeShopEntity actual) {
        assertCoffeeShopEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertCoffeeShopEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopEntityAllUpdatablePropertiesEquals(CoffeeShopEntity expected, CoffeeShopEntity actual) {
        assertCoffeeShopEntityUpdatableFieldsEquals(expected, actual);
        assertCoffeeShopEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopEntityAutoGeneratedPropertiesEquals(CoffeeShopEntity expected, CoffeeShopEntity actual) {
        assertThat(expected)
            .as("Verify CoffeeShopEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopEntityUpdatableFieldsEquals(CoffeeShopEntity expected, CoffeeShopEntity actual) {
        assertThat(expected)
            .as("Verify CoffeeShopEntity relevant properties")
            .satisfies(e -> assertThat(e.getCategoryId()).as("check categoryId").isEqualTo(actual.getCategoryId()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getLogoUri()).as("check logoUri").isEqualTo(actual.getLogoUri()))
            .satisfies(e -> assertThat(e.getDeleted()).as("check deleted").isEqualTo(actual.getDeleted()))
            .satisfies(e -> assertThat(e.getPhone()).as("check phone").isEqualTo(actual.getPhone()))
            .satisfies(e ->
                assertThat(e.getAvailableHoursStart()).as("check availableHoursStart").isEqualTo(actual.getAvailableHoursStart())
            )
            .satisfies(e -> assertThat(e.getAvailableHoursEnd()).as("check availableHoursEnd").isEqualTo(actual.getAvailableHoursEnd()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCoffeeShopEntityUpdatableRelationshipsEquals(CoffeeShopEntity expected, CoffeeShopEntity actual) {
        // empty method
    }
}
