package com.ali.coffeehub.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TagsEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTagsEntityAllPropertiesEquals(TagsEntity expected, TagsEntity actual) {
        assertTagsEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertTagsEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTagsEntityAllUpdatablePropertiesEquals(TagsEntity expected, TagsEntity actual) {
        assertTagsEntityUpdatableFieldsEquals(expected, actual);
        assertTagsEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTagsEntityAutoGeneratedPropertiesEquals(TagsEntity expected, TagsEntity actual) {
        assertThat(expected)
            .as("Verify TagsEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTagsEntityUpdatableFieldsEquals(TagsEntity expected, TagsEntity actual) {
        assertThat(expected)
            .as("Verify TagsEntity relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getSlug()).as("check slug").isEqualTo(actual.getSlug()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getIconUrl()).as("check iconUrl").isEqualTo(actual.getIconUrl()))
            .satisfies(e -> assertThat(e.getParentId()).as("check parentId").isEqualTo(actual.getParentId()))
            .satisfies(e -> assertThat(e.getDisplayOrder()).as("check displayOrder").isEqualTo(actual.getDisplayOrder()))
            .satisfies(e -> assertThat(e.getDeleted()).as("check deleted").isEqualTo(actual.getDeleted()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTagsEntityUpdatableRelationshipsEquals(TagsEntity expected, TagsEntity actual) {
        // empty method
    }
}
