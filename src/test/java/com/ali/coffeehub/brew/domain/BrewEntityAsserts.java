package com.ali.coffeehub.brew.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BrewEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrewEntityAllPropertiesEquals(BrewEntity expected, BrewEntity actual) {
        assertBrewEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertBrewEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrewEntityAllUpdatablePropertiesEquals(BrewEntity expected, BrewEntity actual) {
        assertBrewEntityUpdatableFieldsEquals(expected, actual);
        assertBrewEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrewEntityAutoGeneratedPropertiesEquals(BrewEntity expected, BrewEntity actual) {
        assertThat(expected)
            .as("Verify BrewEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrewEntityUpdatableFieldsEquals(BrewEntity expected, BrewEntity actual) {
        assertThat(expected)
            .as("Verify BrewEntity relevant properties")
            .satisfies(e -> assertThat(e.getCategoryId()).as("check categoryId").isEqualTo(actual.getCategoryId()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getLevel()).as("check level").isEqualTo(actual.getLevel()))
            .satisfies(e -> assertThat(e.getServing()).as("check serving").isEqualTo(actual.getServing()))
            .satisfies(e -> assertThat(e.getIconUri()).as("check iconUri").isEqualTo(actual.getIconUri()))
            .satisfies(e -> assertThat(e.getImageUri()).as("check imageUri").isEqualTo(actual.getImageUri()))
            .satisfies(e -> assertThat(e.getDeleted()).as("check deleted").isEqualTo(actual.getDeleted()))
            .satisfies(e -> assertThat(e.getIsPinned()).as("check isPinned").isEqualTo(actual.getIsPinned()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrewEntityUpdatableRelationshipsEquals(BrewEntity expected, BrewEntity actual) {
        // empty method
    }
}
